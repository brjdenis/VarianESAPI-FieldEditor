<Window x:Class="FieldEditor.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FieldEditor"
             xmlns:oxy="http://oxyplot.org/wpf"
             mc:Ignorable="d" Background="AliceBlue"
             Height="720" Width="1300" WindowStartupLocation="CenterScreen" WindowState="Maximized" Title="FieldEditor">

    <Window.Resources>
        <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="10,0,10,0" />
        </Style>

        <Style x:Key="DataGridContentCellCentering" TargetType="DataGridCell">
            <Style.Resources>
                <Style TargetType="ContentPresenter">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}"/>
        <Style TargetType="{x:Type Label}"/>
        <Style TargetType="{x:Type Border}"/>
        <Style TargetType="{x:Type CheckBox}"/>
        <Style TargetType="{x:Type DataGrid}"/>
        <Style TargetType="{x:Type ToolTip}"/>
        <Style TargetType="{x:Type TextBlock}"/>
        <Style TargetType="{x:Type StackPanel}"/>
        <Style TargetType="{x:Type GroupBox}"/>
        <Style TargetType="{x:Type ScrollBar}"/>
        <Style TargetType="{x:Type TabControl}"/>
        <Style TargetType="{x:Type TabItem}"/>
        <Style TargetType="{x:Type TextBox}"/>
        <Style TargetType="{x:Type oxy:TrackerControl}">
            <Setter Property="LineStroke" Value="Red" />
        </Style>

    </Window.Resources>
    
    <Grid Margin="10,10,10,10" HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.7*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <DockPanel Margin="0,0,5,5" Grid.Column="0" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                    <Label Content="Field: " HorizontalAlignment="Left" VerticalAlignment="Center"></Label>

                    <ComboBox x:Name="BeamComboBox" HorizontalAlignment="Left" ItemsSource="{Binding DataGridBeam, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" DisplayMemberPath="BeamId" Height="30" Width="100" VerticalAlignment="Center" VerticalContentAlignment="Center" SelectionChanged="BeamComboBox_SelectionChanged" SourceUpdated="DataGridControlPoints_SourceUpdated" IsSynchronizedWithCurrentItem="False"></ComboBox>

                    <Label Margin="10,0,0,0" Content="Meterset plot type:" HorizontalAlignment="Left" VerticalAlignment="Center"></Label>
                    <ComboBox x:Name="MetersetPlotType" Height="30" Width="100" VerticalAlignment="Center" VerticalContentAlignment="Center" SelectionChanged="MetersetPlotType_SelectionChanged"></ComboBox>

                    <Button Margin="20,0,0,0" Content="Delete control points" Width="120" Click="Button_Click_3"></Button>

                    <Button Margin="10,0,0,0" Content="Add control point" Width="110" Click="Button_Click_4"></Button>

                    <DockPanel HorizontalAlignment="Right" >
                        <Button Content="Help" Margin="0,0,5,0" Width="50" Click="Button_Click_5"> </Button>
                        <Button Margin="0,0,0,0" Content="Create new plan --> Add new fields" Click="Button_Click_1" Height="30" Width="210" Background="LightGreen"></Button>
                        <Button Margin="5,0,0,0" Content="Copy plan --> Change MLCs/Jaws in-place" Click="Button_Click" Height="30" Width="250" Background="LightGreen"></Button>
                    </DockPanel>
                    
                </DockPanel>

                <Grid Margin="0,5,0,0" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <DataGrid x:Name="DataGridControlPoints" VerticalScrollBarVisibility="Visible" Grid.Column="0" Grid.Row="1" IsReadOnly="False" CanUserAddRows="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="False" HorizontalAlignment="Stretch" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Path=ActualHeight}"  VerticalAlignment="Top" Width="Auto" AutoGenerateColumns="False" ItemsSource="{Binding Path=SelectedItem.Datatable, ElementName=BeamComboBox}" SelectionChanged="DataGridControlPoints_SelectionChanged" PreviewKeyDown="DataGridControlPoints_PreviewKeyDown" SourceUpdated="DataGridControlPoints_SourceUpdated">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Index" Width="60" IsReadOnly="True" Binding="{Binding Index, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}">
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox">
                                        <EventSetter Event="TextChanged" Handler="OnTextChanged" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Gantry" Width="150" IsReadOnly="False" Binding="{Binding Gantry, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}">
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox">
                                        <EventSetter Event="TextChanged" Handler="OnTextChanged" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Meterset" Width="150" IsReadOnly="False" Binding="{Binding MetersetWeight, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}">
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox">
                                        <EventSetter Event="TextChanged" Handler="OnTextChanged" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>

                        </DataGrid.Columns>
                        
                    </DataGrid>
                    
                    <Grid Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <DataGrid x:Name="DataGridJaws" Margin="5,0,0,0" Grid.Column="0" Grid.Row="0" IsReadOnly="False" CanUserAddRows="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="False" HorizontalAlignment="Stretch" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Path=ActualHeight}"  VerticalAlignment="Top" Width="Auto" AutoGenerateColumns="False" ItemsSource="{Binding Path=SelectedItem.JawPositions, ElementName=DataGridControlPoints}" SourceUpdated="DataGridJaws_SourceUpdated">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="JawX1" Width="70" IsReadOnly="False" Binding="{Binding JawX1, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}">
                                    <DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="TextBox">
                                            <EventSetter Event="TextChanged" Handler="OnTextChanged" />
                                        </Style>
                                    </DataGridTextColumn.EditingElementStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="JawX2" Width="70" IsReadOnly="False" Binding="{Binding JawX2, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}">
                                    <DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="TextBox">
                                            <EventSetter Event="TextChanged" Handler="OnTextChanged" />
                                        </Style>
                                    </DataGridTextColumn.EditingElementStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="JawY1" Width="70" IsReadOnly="False" Binding="{Binding JawY1, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}">
                                    <DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="TextBox">
                                            <EventSetter Event="TextChanged" Handler="OnTextChanged" />
                                        </Style>
                                    </DataGridTextColumn.EditingElementStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="JawY2" Width="70" IsReadOnly="False" Binding="{Binding JawY2, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}">
                                    <DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="TextBox">
                                            <EventSetter Event="TextChanged" Handler="OnTextChanged" />
                                        </Style>
                                    </DataGridTextColumn.EditingElementStyle>
                                </DataGridTextColumn>

                            </DataGrid.Columns>
                        </DataGrid>

                        <DataGrid x:Name="DataGridMLC" Margin="5,0,0,0" VerticalScrollBarVisibility="Visible" Grid.Column="0" Grid.Row="1" IsReadOnly="False" CanUserAddRows="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="False" HorizontalAlignment="Stretch" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Path=ActualHeight}"  VerticalAlignment="Top" Width="Auto" AutoGenerateColumns="False" ItemsSource="{Binding Path=SelectedItem.MLCPositions, ElementName=DataGridControlPoints}" SourceUpdated="DataGridMLC_SourceUpdated" SelectionChanged="DataGridMLC_SelectionChanged" PreviewKeyDown="DataGridMLC_PreviewKeyDown">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Num" Width="50" IsReadOnly="True" Binding="{Binding Num, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}">
                                    <DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="TextBox">
                                            <EventSetter Event="TextChanged" Handler="OnTextChanged" />
                                        </Style>
                                    </DataGridTextColumn.EditingElementStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="MLC1" Width="115" IsReadOnly="False" Binding="{Binding MLC1, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}">
                                    <DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="TextBox">
                                            <EventSetter Event="TextChanged" Handler="OnTextChanged" />
                                        </Style>
                                    </DataGridTextColumn.EditingElementStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="MLC2" Width="115" IsReadOnly="False" Binding="{Binding MLC2, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}">
                                    <DataGridTextColumn.EditingElementStyle>
                                        <Style TargetType="TextBox">
                                            <EventSetter Event="TextChanged" Handler="OnTextChanged" />
                                        </Style>
                                    </DataGridTextColumn.EditingElementStyle>
                                </DataGridTextColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>

                    <Grid Margin="5,0,0,0" Grid.Column="2" Grid.Row="0" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.7*"/>
                            <RowDefinition Height="0.3*"/>
                        </Grid.RowDefinitions>

                        <TabControl Grid.Row="0" Grid.Column="0" TabStripPlacement="Bottom" Background="{DynamicResource {x:Static SystemColors.InactiveBorderBrushKey}}">
                            <TabItem Header="Aperture">
                                <Grid x:Name="PlotApertureTab">
                                    <oxy:PlotView x:Name="PlotAperture" Width="200" Height="200" IsMouseWheelEnabled="True" PreviewMouseWheel="PlotAperture_PreviewMouseWheel" VerticalAlignment="Top"/>
                                </Grid>
                            </TabItem>
                            <TabItem Header="Meterset">
                                <Grid x:Name="PlotMetersetTab">
                                    <oxy:PlotView x:Name="PlotMeterset" Width="200" Height="200" IsMouseWheelEnabled="False" VerticalAlignment="Top"/>
                                </Grid>
                            </TabItem>
                            <TabItem Header="MLC position">
                                <Grid x:Name="PlotMLCPositionTab">
                                    <oxy:PlotView x:Name="PlotMLCPosition" Width="200" Height="200" IsMouseWheelEnabled="False" VerticalAlignment="Top"/>
                                </Grid>
                            </TabItem>
                        </TabControl>

                        <Grid Margin="0,5,0,0" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="Apply to selection:" FontWeight="Bold"/>
                            <DockPanel Grid.Row="1" HorizontalAlignment="Left">
                                <Label Content="Parameter:"/>
                                <ComboBox Width="100" x:Name="ComboBoxSelectionParameter" VerticalContentAlignment="Center"></ComboBox>
                                <Label Content="Action:"/>
                                <ComboBox Width="100" x:Name="ComboBoxSelectionAction"  VerticalContentAlignment="Center"></ComboBox>
                                <Label Content="Value:"/>
                                <TextBox Width="100" x:Name="TextBoxSelectionValue"  VerticalContentAlignment="Center" TextChanged="OnTextChanged"/>
                                <Button Margin="5,0,0,0" Content="Apply" Click="Button_Click_2"  VerticalContentAlignment="Center" Width="50"></Button>
                            </DockPanel>
                            
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
